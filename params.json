{"name":"Webdrivercsharpnotes","tagline":"Ongoing notes on using WebDriver with C# for automation","body":"Notes\r\n-----\r\n\r\n###INSTALLATION\r\n\r\n**Firefox** just works - no need to install anything. **Chrome** requires the installation of the chromedriver.exe (not exact name) into location specified in PATH var. **IE** same thing as chrome with IEdriver.exe file.\r\n\r\n\r\n1. Right-click on the solution with your test and choose **Manage NuGet Packages**.\r\n2. Type \"WebDriver\" in the search bar.\r\n3. Install the WebDriver and WebDriver Support Classes packages.\r\n4. Once the packages are installed, add the following **Using** statements at the beginning of your test file.\r\n```c#\r\nusing System.Collections.Generic;\r\nusing OpenQA.Selenium;\r\nusing OpenQA.Selenium.Firefox;\r\nusing OpenQA.Selenium.IE;\r\nusing OpenQA.Selenium.Chrome;\r\nusing OpenQA.Selenium.Support.UI;\r\n```\r\n\r\n###EXAMPLES\r\n####CREATING THE DRIVER OBJECT & OPEN TO URL\r\n```c#\r\nstring vetURL = \"http://nt124181:5503/\";\r\nIWebDriver driver = new FirefoxDriver();\r\ndriver.Url = vetURL;\r\n```\r\n\t\r\n####SETTING IMPLICIT WAIT (timeout to wait for elements to appear)\r\n```c#\r\ndriver.Manage().Timeouts().ImplicitlyWait(TimeSpan.FromSeconds(20));\r\n```\r\n\r\n####DELAY/SLEEP\r\n```c#\r\nusing System.Threading;//required\r\n\r\nThread.Sleep(5000);\r\n```\r\n\r\n####LOGIN EXAMPLE\r\n```c#\r\nstring userName = \"pos@mailinator.com\"; string password = \"Pattnt1*\";\r\ndriver.FindElement(By.Id(\"UserName\")).SendKeys(userName);\r\ndriver.FindElement(By.Id(\"Password\")).SendKeys(password);\r\ndriver.FindElement(By.Id(\"loginSubmit\")).Click();\r\n```\r\n\t\r\n####USING ASSERT TO REPORT FAILURE\r\n```c#\r\nif (driver.FindElement(By.Id(\"addCartItemItemNum\")).Displayed != true)\r\n{\r\n\tAssert.Fail(\"Unable to verify the Quick Order Portlet exists.\");\r\n}\r\n```\r\n\t\r\n####GETTING RADIO BUTTON VALUE\r\n```c#\r\nstring radioVal = driver.FindElement(By.ClassName(\"non\")).GetAttribute(\"value\");\r\nif (radioVal != \"GR\")\r\n{\r\n\tAssert.Fail(\"The radio value not set to 'Ground' as expected. Radio val = \" + radioVal);\r\n}\r\n```\r\n\t\r\n####GET TEXT FIELD VALUE\r\n```c#\r\nstring specialInstructionsValue = driver.FindElement(By.Id(\"ShippingNote\")).Text;\r\nif (specialInstructionsFieldValue.Length > 0)\r\n{\r\n\tAssert.Fail(\"Special Instructions field populated by default.);\r\n\tdriver.FindElement(By.Id(\"ShippingNote\")).Clear();\r\n}\r\n```\r\n\t\r\n####CYCLE THROUGH A NUMBER OF ELEMENTS & LOOK FOR TEXT\r\n```c#\r\nIReadOnlyCollection<IWebElement> textAreas = driver.FindElements(By.ClassName(\"contentAreaText\"));\r\nbool noneFound = false;\r\nforeach(IWebElement textArea in textAreas)\r\n{\r\n\tstring text = textArea.Text;\r\n\tif (text.IndexOf(\"None\") > -1)\r\n\t{\r\n\t\tnoneFound = true;\r\n\t\tbreak;\r\n\t}\r\n}\r\nif (noneFound != true)\r\n{\r\n\tAssert.Fail(\"Unable to verify the Additional Charges is set to 'None'.\");\r\n}\r\n```\r\n\r\nUse **IList** to cycle through elements using the index...\r\n```c#\r\nIList<IWebElement> reviewLinks = driver.FindElements(By.LinkText(\"Review\"));\r\nfor (i = 1; i < reviewLinks.Count; i++)\r\n{\r\n    if (reviewLinks[i].Text;\r\n}\r\n```\r\n\r\n####ITERATE THROUGH A TABLE\r\n```c#\r\nIWebElement table = driver.FindElement(By.ID(\"orderTable\"));\r\nReadOnlyCollection<IWebElement> allRows = table.FindElements(By.TagName(\"tr\"));\r\n\r\nforeach (IWebElement row in allRows)\r\n{\r\n    ReadOnlyCollection<IWebElement> cells = row.FindElements(By.TagName(\"td\"));\r\n    \r\n    foreach (IWebElement cell in cells)\r\n    {\r\n        Console.WriteLIne(\"cell text = \" + cell.Text);\r\n    }\r\n}\r\n\r\n```\r\n\r\n####SELECT OPTION IN DROP DOWN LIST\r\n```c#\r\nIWebElement e = driver.FindElement(By.Id(\"CreditCardModel_CardType\"));\r\nSelectElement select = new SelectElement(e);\r\nselect.SelectByText(\"Visa\");\r\n```\r\n\r\n####WRITING INFO TO LOG\r\n```c#\r\nUsing System.Diagnostics;\r\n\r\nDebug.WriteLine(\"Hello, World!\");\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}